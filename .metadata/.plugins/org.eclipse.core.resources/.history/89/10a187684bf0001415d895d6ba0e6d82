package Assign3;

import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;

import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JMenu;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

public class ProductView extends JFrame implements ProductObserver {

	private JList<String>list;
	private DefaultListModel<String> listModel;
	private InventoryController invC;
	public ArrayList<Product> products;
	public Inventory inv;
	
	public ProductView(InventoryController invC, ArrayList<Product> p){
		this.invC = invC;
		this.products = p;
		this.setLayout(new BorderLayout());
		
		
		JPanel buttonPanel = new JPanel();
		buttonPanel.setLayout(new GridLayout(4,4));
	
		JButton button = new JButton("Add Product");
		button.addActionListener(new ActionListener(){
				public void actionPerformed(ActionEvent e) {
					ProductPartView v = new ProductPartView(ProductView.this.invC, null);
					v.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
					v.setSize(400, 200);
					v.setLocation(500, 100);
					v.setVisible(true);

				}
		});
		buttonPanel.add(button);
		
		button = new JButton("Delete Product");
		buttonPanel.add(button);
		
		button = new JButton("Edit Product");
		buttonPanel.add(button);
		
		button = new JButton("View Products");
		buttonPanel.add(button);
		
		this.add(buttonPanel,BorderLayout.SOUTH);

		listModel = new DefaultListModel<String>();
		list = new JList<String>(listModel);
		list.setFixedCellWidth(100);
		//list.setSelectedIndex(0);//init list selected -> first item
		list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		list.addListSelectionListener(new ListSelectionListener() {
			@Override
			public void valueChanged(ListSelectionEvent e) {
				//can also use
				//foxColor = LIST_LABELS[((JList<String>) e.getSource()).getSelectedIndex()];
				//foxColor = (String) ((JList<String>) e.getSource()).getSelectedValue();
				//updateStatusBar();
			}
		});
		
		list.addMouseListener(new MouseAdapter() {
		    public void mouseClicked(MouseEvent evt) {
		        @SuppressWarnings("rawtypes")
				JList list = (JList)evt.getSource();
		        if (evt.getClickCount() >= 2) {
		            int index = list.locationToIndex(evt.getPoint());
		            Part p = ProductView.this.invC.getPartByIndex(index);
					PartView v = new PartView(ProductView.this.invC, p);
					p.registerObserver(v);
					v.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
					v.setSize(400, 200);
					v.setLocation(500, 100);
					v.setVisible(true);
		        }
		    }
		});
		this.add(new JScrollPane(list), BorderLayout.CENTER);

		//update the list with the inventory model
		updateObserver(inv);

	}

	@Override
	public void updateObserver(Product prod) {
		listModel.clear();
		for(Part p : inv.getParts())
			listModel.addElement(p.getPartName());
		//int i = list.getSelectedIndex();
		//if(inv.getNumParts() > 0)
			//list.setSelectedIndex(0);
	}
		
	@Override
	public void modelDeleted() {
		this.setVisible(false);
	}



}
